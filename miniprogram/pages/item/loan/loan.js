"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var item_api_1 = require("../../../apis/item-api");
var user_api_1 = require("../../../apis/user-api");
Page({
    data: {
        userApi: {},
        itemApi: {},
        itemId: 0,
        children: [],
        childrenArr: [],
        childIndex: 0,
    },
    onLoad: function (query) {
        this.setData({
            userApi: new user_api_1.UserApi(),
            itemApi: new item_api_1.ItemApi(),
            itemId: query.id
        });
    },
    onShow: function () {
        this.getChildren();
    },
    getChildren: function () {
        var _this = this;
        this.data.userApi.profile().then(function (result) {
            var children = result ? result.childrenRelationsDetails.map(function (i) { return i.child; }) : [];
            _this.setData({
                children: children,
                childrenArr: children.map(function (i) { return i.name; })
            });
        });
    },
    bindChildIndexChange: function (e) {
        this.setData({
            childIndex: e.detail.value
        });
    },
    formSubmit: function () {
        var newRecord = {
            itemId: this.data.itemId,
            childId: this.data.children[this.data.childIndex].id
        };
        this.data.itemApi.loan(this.data.itemId, newRecord).then(function (result) {
            console.log(result);
            wx.navigateBack({
                delta: 1
            });
        });
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9hbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImxvYW4udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFDQSxtREFBK0M7QUFFL0MsbURBQStDO0FBRS9DLElBQUksQ0FBQztJQUNELElBQUksRUFBRTtRQUNGLE9BQU8sRUFBVyxFQUFFO1FBQ3BCLE9BQU8sRUFBVyxFQUFFO1FBQ3BCLE1BQU0sRUFBRSxDQUFDO1FBQ1QsUUFBUSxFQUFhLEVBQUU7UUFDdkIsV0FBVyxFQUFZLEVBQUU7UUFDekIsVUFBVSxFQUFFLENBQUM7S0FDaEI7SUFDRCxNQUFNLFlBQUMsS0FBVTtRQUNiLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDVCxPQUFPLEVBQUUsSUFBSSxrQkFBTyxFQUFFO1lBQ3RCLE9BQU8sRUFBRSxJQUFJLGtCQUFPLEVBQUU7WUFDdEIsTUFBTSxFQUFFLEtBQUssQ0FBQyxFQUFFO1NBQ25CLENBQUMsQ0FBQztJQUNQLENBQUM7SUFDRCxNQUFNO1FBQ0YsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFDRCxXQUFXO1FBQVgsaUJBUUM7UUFQRyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxPQUFPLEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBQSxNQUFNO1lBQ25DLElBQU0sUUFBUSxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLHdCQUF3QixDQUFDLEdBQUcsQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxLQUFLLEVBQVAsQ0FBTyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztZQUNqRixLQUFJLENBQUMsT0FBTyxDQUFDO2dCQUNULFFBQVEsRUFBRSxRQUFRO2dCQUNsQixXQUFXLEVBQUUsUUFBUSxDQUFDLEdBQUcsQ0FBQyxVQUFBLENBQUMsSUFBSSxPQUFBLENBQUMsQ0FBQyxJQUFJLEVBQU4sQ0FBTSxDQUFDO2FBQ3pDLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNELG9CQUFvQixZQUFDLENBQU07UUFDdkIsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNULFVBQVUsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUs7U0FDN0IsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNELFVBQVU7UUFDTixJQUFNLFNBQVMsR0FBa0I7WUFDN0IsTUFBTSxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTTtZQUN4QixPQUFPLEVBQUUsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxFQUFFO1NBQ3ZELENBQUM7UUFDRixJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsU0FBUyxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUMsTUFBTTtZQUM1RCxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ3BCLEVBQUUsQ0FBQyxZQUFZLENBQUM7Z0JBQ1osS0FBSyxFQUFFLENBQUM7YUFDWCxDQUFDLENBQUM7UUFDUCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7Q0FDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0l0ZW1MZW5kT3JkZXJ9IGZyb20gJy4uLy4uLy4uL3V0aWxzL3R5cGVzL2l0ZW0tbGVuZC1vcmRlcic7XG5pbXBvcnQge0l0ZW1BcGl9IGZyb20gJy4uLy4uLy4uL2FwaXMvaXRlbS1hcGknO1xuaW1wb3J0IHtTdHVkZW50fSBmcm9tICcuLi8uLi8uLi91dGlscy90eXBlcy9zdHVkZW50JztcbmltcG9ydCB7VXNlckFwaX0gZnJvbSAnLi4vLi4vLi4vYXBpcy91c2VyLWFwaSc7XG5cblBhZ2Uoe1xuICAgIGRhdGE6IHtcbiAgICAgICAgdXNlckFwaTogPFVzZXJBcGk+e30sXG4gICAgICAgIGl0ZW1BcGk6IDxJdGVtQXBpPnt9LFxuICAgICAgICBpdGVtSWQ6IDAsXG4gICAgICAgIGNoaWxkcmVuOiA8U3R1ZGVudFtdPltdLFxuICAgICAgICBjaGlsZHJlbkFycjogPHN0cmluZ1tdPltdLFxuICAgICAgICBjaGlsZEluZGV4OiAwLFxuICAgIH0sXG4gICAgb25Mb2FkKHF1ZXJ5OiBhbnkpIHtcbiAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICAgIHVzZXJBcGk6IG5ldyBVc2VyQXBpKCksXG4gICAgICAgICAgICBpdGVtQXBpOiBuZXcgSXRlbUFwaSgpLFxuICAgICAgICAgICAgaXRlbUlkOiBxdWVyeS5pZFxuICAgICAgICB9KTtcbiAgICB9LFxuICAgIG9uU2hvdygpIHtcbiAgICAgICAgdGhpcy5nZXRDaGlsZHJlbigpO1xuICAgIH0sXG4gICAgZ2V0Q2hpbGRyZW4oKSB7XG4gICAgICAgIHRoaXMuZGF0YS51c2VyQXBpLnByb2ZpbGUoKS50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgICBjb25zdCBjaGlsZHJlbiA9IHJlc3VsdCA/IHJlc3VsdC5jaGlsZHJlblJlbGF0aW9uc0RldGFpbHMubWFwKGkgPT4gaS5jaGlsZCkgOiBbXTtcbiAgICAgICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IGNoaWxkcmVuLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuQXJyOiBjaGlsZHJlbi5tYXAoaSA9PiBpLm5hbWUpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICBiaW5kQ2hpbGRJbmRleENoYW5nZShlOiBhbnkpIHtcbiAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICAgIGNoaWxkSW5kZXg6IGUuZGV0YWlsLnZhbHVlXG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgZm9ybVN1Ym1pdCgpIHtcbiAgICAgICAgY29uc3QgbmV3UmVjb3JkID0gPEl0ZW1MZW5kT3JkZXI+e1xuICAgICAgICAgICAgaXRlbUlkOiB0aGlzLmRhdGEuaXRlbUlkLFxuICAgICAgICAgICAgY2hpbGRJZDogdGhpcy5kYXRhLmNoaWxkcmVuW3RoaXMuZGF0YS5jaGlsZEluZGV4XS5pZFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmRhdGEuaXRlbUFwaS5sb2FuKHRoaXMuZGF0YS5pdGVtSWQsIG5ld1JlY29yZCkudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpO1xuICAgICAgICAgICAgd3gubmF2aWdhdGVCYWNrKHtcbiAgICAgICAgICAgICAgICBkZWx0YTogMVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbn0pO1xuIl19