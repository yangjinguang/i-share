"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var login_1 = require("../../utils/login");
var user_api_1 = require("../../apis/user-api");
var todo_api_1 = require("../../apis/todo-api");
var app = getApp();
Page({
    data: {
        userApi: {},
        profile: {},
        todoApi: {},
        roleTrans: ['', '游客', '管理员', '教师', '家长'],
    },
    onLoad: function () {
        this.setData({
            userApi: new user_api_1.UserApi(),
            todoApi: new todo_api_1.TodoApi()
        });
    },
    onShow: function () {
        var _this = this;
        login_1.CheckLoginStatus(function (res) {
            _this.setData({
                userInfo: res.userInfo,
            });
            _this.getProfile();
            _this.getTodoCount();
        }, function () {
            console.log('not login');
            _this.setData({
                isLogin: false,
            });
        });
    },
    getProfile: function () {
        var _this = this;
        this.data.userApi.profile().then(function (res) {
            _this.profileParse(res);
        });
    },
    getTodoCount: function () {
        var _this = this;
        this.data.todoApi.getCount().then(function (result) {
            _this.setData({
                todoCount: result.count
            });
        });
    },
    profileParse: function (res) {
        var _this = this;
        var roles = res.roles.filter(function (r) { return r !== 0; }).map(function (r) { return _this.data.roleTrans[r]; });
        if (roles.length <= 0) {
            roles.push('游客');
        }
        res.isAdmin = res.roles.indexOf(2) > -1;
        res.isTeacher = res.roles.indexOf(3) > -1;
        app.globalData.profile = res;
        if (app.userInfoReadyCallback) {
            app.userInfoReadyCallback(res);
        }
        this.setData({
            profile: res,
            roles: roles,
            isLogin: true,
            isAdmin: res.isAdmin,
            isTeacher: res.isTeacher
        });
    },
    authSuccess: function () {
        var _this = this;
        login_1.Login(function (profile) {
            _this.profileParse(profile);
        });
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJteS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDJDQUEwRDtBQUcxRCxnREFBNEM7QUFDNUMsZ0RBQTRDO0FBRTVDLElBQU0sR0FBRyxHQUFHLE1BQU0sRUFBVSxDQUFDO0FBRTdCLElBQUksQ0FBQztJQUNELElBQUksRUFBRTtRQUNGLE9BQU8sRUFBVyxFQUFFO1FBQ3BCLE9BQU8sRUFBUSxFQUFFO1FBQ2pCLE9BQU8sRUFBVyxFQUFFO1FBQ3BCLFNBQVMsRUFBRSxDQUFDLEVBQUUsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUM7S0FDM0M7SUFDRCxNQUFNO1FBQ0YsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNULE9BQU8sRUFBRSxJQUFJLGtCQUFPLEVBQUU7WUFDdEIsT0FBTyxFQUFFLElBQUksa0JBQU8sRUFBRTtTQUN6QixDQUFDLENBQUM7SUFDUCxDQUFDO0lBQ0QsTUFBTTtRQUFOLGlCQWFDO1FBWkcsd0JBQWdCLENBQUMsVUFBQyxHQUFHO1lBQ2pCLEtBQUksQ0FBQyxPQUFPLENBQUM7Z0JBQ1QsUUFBUSxFQUFFLEdBQUcsQ0FBQyxRQUFRO2FBQ3pCLENBQUMsQ0FBQztZQUNILEtBQUksQ0FBQyxVQUFVLEVBQUUsQ0FBQztZQUNsQixLQUFJLENBQUMsWUFBWSxFQUFFLENBQUM7UUFDeEIsQ0FBQyxFQUFFO1lBQ0MsT0FBTyxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQTtZQUN4QixLQUFJLENBQUMsT0FBTyxDQUFDO2dCQUNULE9BQU8sRUFBRSxLQUFLO2FBQ2pCLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNELFVBQVU7UUFBVixpQkFJQztRQUhHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sRUFBRSxDQUFDLElBQUksQ0FBQyxVQUFBLEdBQUc7WUFDaEMsS0FBSSxDQUFDLFlBQVksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUMzQixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFDRCxZQUFZO1FBQVosaUJBTUM7UUFMRyxJQUFJLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBQSxNQUFNO1lBQ3BDLEtBQUksQ0FBQyxPQUFPLENBQUM7Z0JBQ1QsU0FBUyxFQUFFLE1BQU0sQ0FBQyxLQUFLO2FBQzFCLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNELFlBQVksRUFBWixVQUFhLEdBQVM7UUFBdEIsaUJBbUJDO1FBbEJHLElBQU0sS0FBSyxHQUFHLEdBQUcsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLFVBQUEsQ0FBQyxJQUFJLE9BQUEsQ0FBQyxLQUFLLENBQUMsRUFBUCxDQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxLQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBdEIsQ0FBc0IsQ0FBQyxDQUFDO1FBQzlFLElBQUksS0FBSyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7WUFDbkIsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztTQUNwQjtRQUNELEdBQUcsQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDLEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDeEMsR0FBRyxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUMsS0FBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztRQUMxQyxHQUFHLENBQUMsVUFBVSxDQUFDLE9BQU8sR0FBRyxHQUFHLENBQUM7UUFDN0IsSUFBSSxHQUFHLENBQUMscUJBQXFCLEVBQUU7WUFDM0IsR0FBRyxDQUFDLHFCQUFxQixDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ2xDO1FBQ0QsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNULE9BQU8sRUFBRSxHQUFHO1lBQ1osS0FBSyxFQUFFLEtBQUs7WUFFWixPQUFPLEVBQUUsSUFBSTtZQUNiLE9BQU8sRUFBRSxHQUFHLENBQUMsT0FBTztZQUNwQixTQUFTLEVBQUUsR0FBRyxDQUFDLFNBQVM7U0FDM0IsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNELFdBQVc7UUFBWCxpQkFJQztRQUhHLGFBQUssQ0FBQyxVQUFDLE9BQU87WUFDVixLQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQy9CLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztDQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q2hlY2tMb2dpblN0YXR1cywgTG9naW59IGZyb20gJy4uLy4uL3V0aWxzL2xvZ2luJztcbmltcG9ydCB7VXNlcn0gZnJvbSAnLi4vLi4vdXRpbHMvdHlwZXMvdXNlcic7XG5pbXBvcnQge0lNeUFwcH0gZnJvbSAnLi4vLi4vYXBwJztcbmltcG9ydCB7VXNlckFwaX0gZnJvbSAnLi4vLi4vYXBpcy91c2VyLWFwaSc7XG5pbXBvcnQge1RvZG9BcGl9IGZyb20gJy4uLy4uL2FwaXMvdG9kby1hcGknO1xuXG5jb25zdCBhcHAgPSBnZXRBcHA8SU15QXBwPigpO1xuXG5QYWdlKHtcbiAgICBkYXRhOiB7XG4gICAgICAgIHVzZXJBcGk6IDxVc2VyQXBpPnt9LFxuICAgICAgICBwcm9maWxlOiA8VXNlcj57fSxcbiAgICAgICAgdG9kb0FwaTogPFRvZG9BcGk+e30sXG4gICAgICAgIHJvbGVUcmFuczogWycnLCAn5ri45a6iJywgJ+euoeeQhuWRmCcsICfmlZnluIgnLCAn5a626ZW/J10sXG4gICAgfSxcbiAgICBvbkxvYWQoKSB7XG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICB1c2VyQXBpOiBuZXcgVXNlckFwaSgpLFxuICAgICAgICAgICAgdG9kb0FwaTogbmV3IFRvZG9BcGkoKVxuICAgICAgICB9KTtcbiAgICB9LFxuICAgIG9uU2hvdygpIHtcbiAgICAgICAgQ2hlY2tMb2dpblN0YXR1cygocmVzKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgICAgIHVzZXJJbmZvOiByZXMudXNlckluZm8sXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHRoaXMuZ2V0UHJvZmlsZSgpO1xuICAgICAgICAgICAgdGhpcy5nZXRUb2RvQ291bnQoKTtcbiAgICAgICAgfSwgKCkgPT4ge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ25vdCBsb2dpbicpXG4gICAgICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgICAgIGlzTG9naW46IGZhbHNlLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0UHJvZmlsZSgpIHtcbiAgICAgICAgdGhpcy5kYXRhLnVzZXJBcGkucHJvZmlsZSgpLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgIHRoaXMucHJvZmlsZVBhcnNlKHJlcyk7XG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgZ2V0VG9kb0NvdW50KCkge1xuICAgICAgICB0aGlzLmRhdGEudG9kb0FwaS5nZXRDb3VudCgpLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICAgICAgdG9kb0NvdW50OiByZXN1bHQuY291bnRcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9LFxuICAgIHByb2ZpbGVQYXJzZShyZXM6IFVzZXIpIHtcbiAgICAgICAgY29uc3Qgcm9sZXMgPSByZXMucm9sZXMuZmlsdGVyKHIgPT4gciAhPT0gMCkubWFwKHIgPT4gdGhpcy5kYXRhLnJvbGVUcmFuc1tyXSk7XG4gICAgICAgIGlmIChyb2xlcy5sZW5ndGggPD0gMCkge1xuICAgICAgICAgICAgcm9sZXMucHVzaCgn5ri45a6iJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmVzLmlzQWRtaW4gPSByZXMucm9sZXMuaW5kZXhPZigyKSA+IC0xO1xuICAgICAgICByZXMuaXNUZWFjaGVyID0gcmVzLnJvbGVzLmluZGV4T2YoMykgPiAtMTtcbiAgICAgICAgYXBwLmdsb2JhbERhdGEucHJvZmlsZSA9IHJlcztcbiAgICAgICAgaWYgKGFwcC51c2VySW5mb1JlYWR5Q2FsbGJhY2spIHtcbiAgICAgICAgICAgIGFwcC51c2VySW5mb1JlYWR5Q2FsbGJhY2socmVzKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgcHJvZmlsZTogcmVzLFxuICAgICAgICAgICAgcm9sZXM6IHJvbGVzLFxuICAgICAgICAgICAgLy8gc2hvd1JlZ2lzdGVyQnRuOiByb2xlcy5sZW5ndGggPCAyLFxuICAgICAgICAgICAgaXNMb2dpbjogdHJ1ZSxcbiAgICAgICAgICAgIGlzQWRtaW46IHJlcy5pc0FkbWluLFxuICAgICAgICAgICAgaXNUZWFjaGVyOiByZXMuaXNUZWFjaGVyXG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgYXV0aFN1Y2Nlc3MoKSB7XG4gICAgICAgIExvZ2luKChwcm9maWxlKSA9PiB7XG4gICAgICAgICAgICB0aGlzLnByb2ZpbGVQYXJzZShwcm9maWxlKTtcbiAgICAgICAgfSk7XG4gICAgfSxcbn0pO1xuIl19