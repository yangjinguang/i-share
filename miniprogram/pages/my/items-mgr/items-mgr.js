"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var item_api_1 = require("../../../apis/item-api");
var settings_api_1 = require("../../../apis/settings-api");
Page({
    data: {
        itemApi: {},
        settingsApi: {},
        items: {},
        page: 1,
    },
    onLoad: function () {
        this.setData({
            itemApi: new item_api_1.ItemApi(),
            settingsApi: new settings_api_1.SettingsApi()
        });
    },
    onShow: function () {
        this.query(1);
    },
    itemUpload: function () {
        this._itemUpload();
    },
    _itemUpload: function (id) {
        var url = '/pages/item/upload/upload';
        if (id) {
            url = url + '?id=' + id;
        }
        wx.navigateTo({
            url: url
        });
    },
    query: function (page) {
        var _this = this;
        page = page || this.data.page;
        this.data.itemApi.queryMgr(page, 20).then(function (result) {
            _this.setData({
                items: result.list,
                page: result.pagination.page
            });
        });
    },
    itemDetail: function (e) {
        var id = e.currentTarget.dataset.itemId;
        if (id) {
            wx.navigateTo({
                url: '/pages/item/detail/detail?from=2&id=' + id
            });
        }
    },
    itemAction: function (e) {
        var _this = this;
        wx.showActionSheet({
            itemList: ['编辑', '删除'],
            success: function (res) {
                switch (res.tapIndex) {
                    case 0:
                        if (e.currentTarget.dataset.itemId) {
                            _this._itemUpload(e.currentTarget.dataset.itemId);
                        }
                        break;
                    case 1:
                        if (e.currentTarget.dataset.itemId) {
                            _this.itemDelete(e.currentTarget.dataset.itemId);
                        }
                        break;
                }
            }
        });
    },
    itemDelete: function (id) {
        var _this = this;
        this.data.itemApi.delete(id).then(function () {
            _this.query();
        });
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXRlbXMtbWdyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaXRlbXMtbWdyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQStDO0FBRS9DLDJEQUF1RDtBQUV2RCxJQUFJLENBQUM7SUFDRCxJQUFJLEVBQUU7UUFDRixPQUFPLEVBQVcsRUFBRTtRQUNwQixXQUFXLEVBQWUsRUFBRTtRQUM1QixLQUFLLEVBQVUsRUFBRTtRQUNqQixJQUFJLEVBQUUsQ0FBQztLQUNWO0lBQ0QsTUFBTTtRQUNGLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDVCxPQUFPLEVBQUUsSUFBSSxrQkFBTyxFQUFFO1lBQ3RCLFdBQVcsRUFBRSxJQUFJLDBCQUFXLEVBQUU7U0FDakMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNELE1BQU07UUFDRixJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2xCLENBQUM7SUFDRCxVQUFVO1FBQ04sSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFDRCxXQUFXLEVBQVgsVUFBWSxFQUFXO1FBQ25CLElBQUksR0FBRyxHQUFHLDJCQUEyQixDQUFDO1FBQ3RDLElBQUksRUFBRSxFQUFFO1lBQ0osR0FBRyxHQUFHLEdBQUcsR0FBRyxNQUFNLEdBQUcsRUFBRSxDQUFDO1NBQzNCO1FBQ0QsRUFBRSxDQUFDLFVBQVUsQ0FBQztZQUNWLEdBQUcsRUFBRSxHQUFHO1NBQ1gsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNELEtBQUssRUFBTCxVQUFNLElBQWE7UUFBbkIsaUJBUUM7UUFQRyxJQUFJLEdBQUcsSUFBSSxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDO1FBQzlCLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQUEsTUFBTTtZQUM1QyxLQUFJLENBQUMsT0FBTyxDQUFDO2dCQUNULEtBQUssRUFBRSxNQUFNLENBQUMsSUFBSTtnQkFDbEIsSUFBSSxFQUFFLE1BQU0sQ0FBQyxVQUFVLENBQUMsSUFBSTthQUMvQixDQUFDLENBQUM7UUFDUCxDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFDRCxVQUFVLEVBQVYsVUFBVyxDQUFNO1FBQ2IsSUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO1FBQzFDLElBQUksRUFBRSxFQUFFO1lBQ0osRUFBRSxDQUFDLFVBQVUsQ0FBQztnQkFDVixHQUFHLEVBQUUsc0NBQXNDLEdBQUcsRUFBRTthQUNuRCxDQUFDLENBQUM7U0FDTjtJQUNMLENBQUM7SUFDRCxVQUFVLEVBQVYsVUFBVyxDQUFNO1FBQWpCLGlCQWtCQztRQWpCRyxFQUFFLENBQUMsZUFBZSxDQUFDO1lBQ2YsUUFBUSxFQUFFLENBQUMsSUFBSSxFQUFFLElBQUksQ0FBQztZQUN0QixPQUFPLEVBQUUsVUFBQyxHQUFHO2dCQUNULFFBQVEsR0FBRyxDQUFDLFFBQVEsRUFBRTtvQkFDbEIsS0FBSyxDQUFDO3dCQUNGLElBQUksQ0FBQyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFOzRCQUNoQyxLQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDO3lCQUNwRDt3QkFDRCxNQUFNO29CQUNWLEtBQUssQ0FBQzt3QkFDRixJQUFJLENBQUMsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRTs0QkFDaEMsS0FBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQzt5QkFDbkQ7d0JBQ0QsTUFBTTtpQkFDYjtZQUNMLENBQUM7U0FDSixDQUFDLENBQUM7SUFDUCxDQUFDO0lBQ0QsVUFBVSxFQUFWLFVBQVcsRUFBVTtRQUFyQixpQkFJQztRQUhHLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUM7WUFDOUIsS0FBSSxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ2pCLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztDQUNKLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SXRlbUFwaX0gZnJvbSAnLi4vLi4vLi4vYXBpcy9pdGVtLWFwaSc7XG5pbXBvcnQge0l0ZW19IGZyb20gJy4uLy4uLy4uL3V0aWxzL3R5cGVzL2l0ZW0nO1xuaW1wb3J0IHtTZXR0aW5nc0FwaX0gZnJvbSAnLi4vLi4vLi4vYXBpcy9zZXR0aW5ncy1hcGknO1xuXG5QYWdlKHtcbiAgICBkYXRhOiB7XG4gICAgICAgIGl0ZW1BcGk6IDxJdGVtQXBpPnt9LFxuICAgICAgICBzZXR0aW5nc0FwaTogPFNldHRpbmdzQXBpPnt9LFxuICAgICAgICBpdGVtczogPEl0ZW1bXT57fSxcbiAgICAgICAgcGFnZTogMSxcbiAgICB9LFxuICAgIG9uTG9hZCgpIHtcbiAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICAgIGl0ZW1BcGk6IG5ldyBJdGVtQXBpKCksXG4gICAgICAgICAgICBzZXR0aW5nc0FwaTogbmV3IFNldHRpbmdzQXBpKClcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICBvblNob3coKSB7XG4gICAgICAgIHRoaXMucXVlcnkoMSk7XG4gICAgfSxcbiAgICBpdGVtVXBsb2FkKCkge1xuICAgICAgICB0aGlzLl9pdGVtVXBsb2FkKCk7XG4gICAgfSxcbiAgICBfaXRlbVVwbG9hZChpZD86IHN0cmluZykge1xuICAgICAgICBsZXQgdXJsID0gJy9wYWdlcy9pdGVtL3VwbG9hZC91cGxvYWQnO1xuICAgICAgICBpZiAoaWQpIHtcbiAgICAgICAgICAgIHVybCA9IHVybCArICc/aWQ9JyArIGlkO1xuICAgICAgICB9XG4gICAgICAgIHd4Lm5hdmlnYXRlVG8oe1xuICAgICAgICAgICAgdXJsOiB1cmxcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICBxdWVyeShwYWdlPzogbnVtYmVyKSB7XG4gICAgICAgIHBhZ2UgPSBwYWdlIHx8IHRoaXMuZGF0YS5wYWdlO1xuICAgICAgICB0aGlzLmRhdGEuaXRlbUFwaS5xdWVyeU1ncihwYWdlLCAyMCkudGhlbihyZXN1bHQgPT4ge1xuICAgICAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICAgICAgICBpdGVtczogcmVzdWx0Lmxpc3QsXG4gICAgICAgICAgICAgICAgcGFnZTogcmVzdWx0LnBhZ2luYXRpb24ucGFnZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH0sXG4gICAgaXRlbURldGFpbChlOiBhbnkpIHtcbiAgICAgICAgY29uc3QgaWQgPSBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldC5pdGVtSWQ7XG4gICAgICAgIGlmIChpZCkge1xuICAgICAgICAgICAgd3gubmF2aWdhdGVUbyh7XG4gICAgICAgICAgICAgICAgdXJsOiAnL3BhZ2VzL2l0ZW0vZGV0YWlsL2RldGFpbD9mcm9tPTImaWQ9JyArIGlkXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgaXRlbUFjdGlvbihlOiBhbnkpIHtcbiAgICAgICAgd3guc2hvd0FjdGlvblNoZWV0KHtcbiAgICAgICAgICAgIGl0ZW1MaXN0OiBbJ+e8lui+kScsICfliKDpmaQnXSxcbiAgICAgICAgICAgIHN1Y2Nlc3M6IChyZXMpID0+IHtcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKHJlcy50YXBJbmRleCkge1xuICAgICAgICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQuaXRlbUlkKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5faXRlbVVwbG9hZChlLmN1cnJlbnRUYXJnZXQuZGF0YXNldC5pdGVtSWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMTpcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLmN1cnJlbnRUYXJnZXQuZGF0YXNldC5pdGVtSWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLml0ZW1EZWxldGUoZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQuaXRlbUlkKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICBpdGVtRGVsZXRlKGlkOiBudW1iZXIpIHtcbiAgICAgICAgdGhpcy5kYXRhLml0ZW1BcGkuZGVsZXRlKGlkKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgIHRoaXMucXVlcnkoKTtcbiAgICAgICAgfSk7XG4gICAgfVxufSk7XG4iXX0=