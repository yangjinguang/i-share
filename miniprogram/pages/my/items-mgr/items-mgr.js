"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var item_api_1 = require("../../../apis/item-api");
var settings_api_1 = require("../../../apis/settings-api");
Page({
    data: {
        itemApi: {},
        settingsApi: {},
        items: {},
        page: 1,
    },
    onLoad: function () {
        this.setData({
            itemApi: new item_api_1.ItemApi(),
            settingsApi: new settings_api_1.SettingsApi()
        });
    },
    onShow: function () {
        this.query(1);
    },
    itemUpload: function () {
        this._itemUpload();
    },
    _itemUpload: function (id) {
        var url = '/pages/item/upload/upload';
        if (id) {
            url = url + '?id=' + id;
        }
        wx.navigateTo({
            url: url
        });
    },
    query: function (page) {
        var _this = this;
        page = page || this.data.page;
        this.data.itemApi.queryMgr(page, 20).then(function (result) {
            _this.setData({
                items: result.list,
                page: result.pagination.page
            });
        });
    },
    itemDetail: function (e) {
        var id = e.currentTarget.dataset.itemId;
        if (id) {
            wx.navigateTo({
                url: '/pages/item/detail/detail?from=2&id=' + id
            });
        }
    },
    itemAction: function (e) {
        var _this = this;
        wx.showActionSheet({
            itemList: ['编辑', '删除'],
            success: function (res) {
                switch (res.tapIndex) {
                    case 0:
                        if (e.currentTarget.dataset.itemId) {
                            _this._itemUpload(e.currentTarget.dataset.itemId);
                        }
                        break;
                    case 1:
                        if (e.currentTarget.dataset.itemId) {
                            _this.itemDelete(e.currentTarget.dataset.itemId);
                        }
                        break;
                }
            }
        });
    },
    itemDelete: function (id) {
        var _this = this;
        this.data.itemApi.delete(id).then(function () {
            _this.query();
        });
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXRlbXMtbWdyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiaXRlbXMtbWdyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsbURBQStDO0FBRS9DLDJEQUF1RDtBQUV2RCxJQUFJLENBQUM7SUFDRCxJQUFJLEVBQUU7UUFDRixPQUFPLEVBQVcsRUFBRTtRQUNwQixXQUFXLEVBQWUsRUFBRTtRQUM1QixLQUFLLEVBQVUsRUFBRTtRQUNqQixJQUFJLEVBQUUsQ0FBQztLQUNWO0lBQ0QsTUFBTTtRQUNGLElBQUksQ0FBQyxPQUFPLENBQUM7WUFDVCxPQUFPLEVBQUUsSUFBSSxrQkFBTyxFQUFFO1lBQ3RCLFdBQVcsRUFBRSxJQUFJLDBCQUFXLEVBQUU7U0FDakMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNELE1BQU07UUFDRixJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQ2xCLENBQUM7SUFDRCxVQUFVO1FBQ04sSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ3ZCLENBQUM7SUFDRCxXQUFXLFlBQUMsRUFBVztRQUNuQixJQUFJLEdBQUcsR0FBRywyQkFBMkIsQ0FBQztRQUN0QyxJQUFJLEVBQUUsRUFBRTtZQUNKLEdBQUcsR0FBRyxHQUFHLEdBQUcsTUFBTSxHQUFHLEVBQUUsQ0FBQztTQUMzQjtRQUNELEVBQUUsQ0FBQyxVQUFVLENBQUM7WUFDVixHQUFHLEVBQUUsR0FBRztTQUNYLENBQUMsQ0FBQztJQUNQLENBQUM7SUFDRCxLQUFLLFlBQUMsSUFBYTtRQUFuQixpQkFRQztRQVBHLElBQUksR0FBRyxJQUFJLElBQUksSUFBSSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUM7UUFDOUIsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLElBQUksRUFBRSxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsVUFBQSxNQUFNO1lBQzVDLEtBQUksQ0FBQyxPQUFPLENBQUM7Z0JBQ1QsS0FBSyxFQUFFLE1BQU0sQ0FBQyxJQUFJO2dCQUNsQixJQUFJLEVBQUUsTUFBTSxDQUFDLFVBQVUsQ0FBQyxJQUFJO2FBQy9CLENBQUMsQ0FBQztRQUNQLENBQUMsQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNELFVBQVUsWUFBQyxDQUFNO1FBQ2IsSUFBTSxFQUFFLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDO1FBQzFDLElBQUksRUFBRSxFQUFFO1lBQ0osRUFBRSxDQUFDLFVBQVUsQ0FBQztnQkFDVixHQUFHLEVBQUUsc0NBQXNDLEdBQUcsRUFBRTthQUNuRCxDQUFDLENBQUM7U0FDTjtJQUNMLENBQUM7SUFDRCxVQUFVLFlBQUMsQ0FBTTtRQUFqQixpQkFrQkM7UUFqQkcsRUFBRSxDQUFDLGVBQWUsQ0FBQztZQUNmLFFBQVEsRUFBRSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUM7WUFDdEIsT0FBTyxFQUFFLFVBQUMsR0FBRztnQkFDVCxRQUFRLEdBQUcsQ0FBQyxRQUFRLEVBQUU7b0JBQ2xCLEtBQUssQ0FBQzt3QkFDRixJQUFJLENBQUMsQ0FBQyxhQUFhLENBQUMsT0FBTyxDQUFDLE1BQU0sRUFBRTs0QkFDaEMsS0FBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQzt5QkFDcEQ7d0JBQ0QsTUFBTTtvQkFDVixLQUFLLENBQUM7d0JBQ0YsSUFBSSxDQUFDLENBQUMsYUFBYSxDQUFDLE9BQU8sQ0FBQyxNQUFNLEVBQUU7NEJBQ2hDLEtBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7eUJBQ25EO3dCQUNELE1BQU07aUJBQ2I7WUFDTCxDQUFDO1NBQ0osQ0FBQyxDQUFDO0lBQ1AsQ0FBQztJQUNELFVBQVUsWUFBQyxFQUFVO1FBQXJCLGlCQUlDO1FBSEcsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQztZQUM5QixLQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDakIsQ0FBQyxDQUFDLENBQUM7SUFDUCxDQUFDO0NBQ0osQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJdGVtQXBpfSBmcm9tICcuLi8uLi8uLi9hcGlzL2l0ZW0tYXBpJztcbmltcG9ydCB7SXRlbX0gZnJvbSAnLi4vLi4vLi4vdXRpbHMvdHlwZXMvaXRlbSc7XG5pbXBvcnQge1NldHRpbmdzQXBpfSBmcm9tICcuLi8uLi8uLi9hcGlzL3NldHRpbmdzLWFwaSc7XG5cblBhZ2Uoe1xuICAgIGRhdGE6IHtcbiAgICAgICAgaXRlbUFwaTogPEl0ZW1BcGk+e30sXG4gICAgICAgIHNldHRpbmdzQXBpOiA8U2V0dGluZ3NBcGk+e30sXG4gICAgICAgIGl0ZW1zOiA8SXRlbVtdPnt9LFxuICAgICAgICBwYWdlOiAxLFxuICAgIH0sXG4gICAgb25Mb2FkKCkge1xuICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgaXRlbUFwaTogbmV3IEl0ZW1BcGkoKSxcbiAgICAgICAgICAgIHNldHRpbmdzQXBpOiBuZXcgU2V0dGluZ3NBcGkoKVxuICAgICAgICB9KTtcbiAgICB9LFxuICAgIG9uU2hvdygpIHtcbiAgICAgICAgdGhpcy5xdWVyeSgxKTtcbiAgICB9LFxuICAgIGl0ZW1VcGxvYWQoKSB7XG4gICAgICAgIHRoaXMuX2l0ZW1VcGxvYWQoKTtcbiAgICB9LFxuICAgIF9pdGVtVXBsb2FkKGlkPzogc3RyaW5nKSB7XG4gICAgICAgIGxldCB1cmwgPSAnL3BhZ2VzL2l0ZW0vdXBsb2FkL3VwbG9hZCc7XG4gICAgICAgIGlmIChpZCkge1xuICAgICAgICAgICAgdXJsID0gdXJsICsgJz9pZD0nICsgaWQ7XG4gICAgICAgIH1cbiAgICAgICAgd3gubmF2aWdhdGVUbyh7XG4gICAgICAgICAgICB1cmw6IHVybFxuICAgICAgICB9KTtcbiAgICB9LFxuICAgIHF1ZXJ5KHBhZ2U/OiBudW1iZXIpIHtcbiAgICAgICAgcGFnZSA9IHBhZ2UgfHwgdGhpcy5kYXRhLnBhZ2U7XG4gICAgICAgIHRoaXMuZGF0YS5pdGVtQXBpLnF1ZXJ5TWdyKHBhZ2UsIDIwKS50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgICB0aGlzLnNldERhdGEoe1xuICAgICAgICAgICAgICAgIGl0ZW1zOiByZXN1bHQubGlzdCxcbiAgICAgICAgICAgICAgICBwYWdlOiByZXN1bHQucGFnaW5hdGlvbi5wYWdlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfSxcbiAgICBpdGVtRGV0YWlsKGU6IGFueSkge1xuICAgICAgICBjb25zdCBpZCA9IGUuY3VycmVudFRhcmdldC5kYXRhc2V0Lml0ZW1JZDtcbiAgICAgICAgaWYgKGlkKSB7XG4gICAgICAgICAgICB3eC5uYXZpZ2F0ZVRvKHtcbiAgICAgICAgICAgICAgICB1cmw6ICcvcGFnZXMvaXRlbS9kZXRhaWwvZGV0YWlsP2Zyb209MiZpZD0nICsgaWRcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfSxcbiAgICBpdGVtQWN0aW9uKGU6IGFueSkge1xuICAgICAgICB3eC5zaG93QWN0aW9uU2hlZXQoe1xuICAgICAgICAgICAgaXRlbUxpc3Q6IFsn57yW6L6RJywgJ+WIoOmZpCddLFxuICAgICAgICAgICAgc3VjY2VzczogKHJlcykgPT4ge1xuICAgICAgICAgICAgICAgIHN3aXRjaCAocmVzLnRhcEluZGV4KSB7XG4gICAgICAgICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChlLmN1cnJlbnRUYXJnZXQuZGF0YXNldC5pdGVtSWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9pdGVtVXBsb2FkKGUuY3VycmVudFRhcmdldC5kYXRhc2V0Lml0ZW1JZCk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAxOlxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGUuY3VycmVudFRhcmdldC5kYXRhc2V0Lml0ZW1JZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaXRlbURlbGV0ZShlLmN1cnJlbnRUYXJnZXQuZGF0YXNldC5pdGVtSWQpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9LFxuICAgIGl0ZW1EZWxldGUoaWQ6IG51bWJlcikge1xuICAgICAgICB0aGlzLmRhdGEuaXRlbUFwaS5kZWxldGUoaWQpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5xdWVyeSgpO1xuICAgICAgICB9KTtcbiAgICB9XG59KTtcbiJdfQ==