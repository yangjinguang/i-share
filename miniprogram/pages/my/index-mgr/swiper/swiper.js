"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var item_api_1 = require("../../../../apis/item-api");
var upload_image_item_1 = require("../../../../utils/types/upload-image-item");
var settings_api_1 = require("../../../../apis/settings-api");
Page({
    data: {
        swiperImages: [],
        uploadImages: [],
        itemApi: {},
        settingsApi: {},
        banners: [],
        upToken: '',
    },
    onLoad: function () {
        var _this = this;
        this.setData({
            itemApi: new item_api_1.ItemApi(),
            settingsApi: new settings_api_1.SettingsApi()
        });
        this.data.settingsApi.uploadToken().then(function (result) {
            _this.setData({
                upToken: result,
                swiperImages: []
            });
        });
        this.getSwiper();
    },
    getSwiper: function () {
        var _this = this;
        this.data.settingsApi.getBanners().then(function (result) {
            _this.setData({
                banners: result,
                swiperImages: result.map(function (i) {
                    return {
                        fileName: i.imageUrl.split('/')[i.imageUrl.split('/').length - 1],
                        tempPath: i.imageUrl,
                        completed: true,
                        success: true
                    };
                })
            });
        });
    },
    imageAction: function (e) {
        var _this = this;
        wx.showActionSheet({
            itemList: ['删除'],
            success: function (res) {
                switch (res.tapIndex) {
                    case 0:
                        console.log(e.currentTarget.dataset);
                        var swiperImages = _this.data.swiperImages;
                        swiperImages.splice(e.currentTarget.dataset.imageIndex, 1);
                        _this.setData({
                            swiperImages: swiperImages
                        });
                }
            }
        });
    },
    chooseImage: function () {
        var _this = this;
        wx.chooseImage({
            success: function (res) {
                var uploadImageItemObj = new upload_image_item_1.UploadImageItemObj(_this.data.upToken, res.tempFilePaths[0], 'index_swiper', function (d) {
                    if (d) {
                        var swiperImages_1 = _this.data.swiperImages;
                        swiperImages_1.forEach(function (i) {
                            if (i.fileName === d.fileName) {
                                i.progress = d.progress;
                                i.completed = d.completed;
                                i.success = d.success;
                            }
                        });
                        _this.setData({
                            swiperImages: swiperImages_1
                        });
                    }
                });
                var swiperImages = _this.data.swiperImages;
                swiperImages.push(uploadImageItemObj);
                _this.setData({
                    swiperImages: swiperImages
                });
                uploadImageItemObj.upload();
            }
        });
    },
    submit: function () {
        var images = this.data.swiperImages.map(function (i) { return i.fileName; });
        this.data.settingsApi.updateBanners(images).then(function () {
            wx.showToast({
                title: '保存成功',
            });
        });
    }
});
//# sourceMappingURL=data:application/json;base64,