"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var student_api_1 = require("../../../../apis/student-api");
Page({
    data: {
        studentApi: {},
        studentId: 0,
        classId: 0,
        isNew: true,
        name: ''
    },
    onLoad: function (query) {
        console.log(query);
        this.setData({
            studentApi: new student_api_1.StudentApi(),
            studentId: query['studentId'] || '',
            isNew: !query['studentId'],
            classId: query['classId']
        });
        this.getChild();
    },
    getChild: function () {
        var _this = this;
        if (this.data.studentId) {
            this.data.studentApi.get(this.data.studentId).then(function (result) {
                _this.setData({
                    name: result.name
                });
            });
        }
    },
    formSubmit: function (e) {
        var formValue = e.detail.value;
        var newStudent = {
            classId: this.data.classId,
            name: formValue['name']
        };
        if (this.data.isNew) {
            this.data.studentApi.create(newStudent).then(function () {
                wx.navigateBack({
                    delta: 1
                });
            });
        }
        else {
            this.data.studentApi.update(this.data.studentId, newStudent).then(function () {
                wx.navigateBack({
                    delta: 1
                });
            });
        }
    }
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiY3JlYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNERBQXdEO0FBR3hELElBQUksQ0FBQztJQUNELElBQUksRUFBRTtRQUNGLFVBQVUsRUFBYyxFQUFFO1FBQzFCLFNBQVMsRUFBRSxDQUFDO1FBQ1osT0FBTyxFQUFFLENBQUM7UUFDVixLQUFLLEVBQUUsSUFBSTtRQUNYLElBQUksRUFBRSxFQUFFO0tBQ1g7SUFDRCxNQUFNLFlBQUMsS0FBVTtRQUNiLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbkIsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUNULFVBQVUsRUFBRSxJQUFJLHdCQUFVLEVBQUU7WUFDNUIsU0FBUyxFQUFFLEtBQUssQ0FBQyxXQUFXLENBQUMsSUFBSSxFQUFFO1lBQ25DLEtBQUssRUFBRSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUM7WUFDMUIsT0FBTyxFQUFFLEtBQUssQ0FBQyxTQUFTLENBQUM7U0FDNUIsQ0FBQyxDQUFDO1FBQ0gsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ3BCLENBQUM7SUFDRCxRQUFRO1FBQVIsaUJBUUM7UUFQRyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUFFO1lBQ3JCLElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQUksQ0FBQyxVQUFBLE1BQU07Z0JBQ3JELEtBQUksQ0FBQyxPQUFPLENBQUM7b0JBQ1QsSUFBSSxFQUFFLE1BQU0sQ0FBQyxJQUFJO2lCQUNwQixDQUFDLENBQUM7WUFDUCxDQUFDLENBQUMsQ0FBQztTQUNOO0lBQ0wsQ0FBQztJQUNELFVBQVUsWUFBQyxDQUFNO1FBQ2IsSUFBTSxTQUFTLEdBQUcsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUM7UUFDakMsSUFBTSxVQUFVLEdBQVk7WUFDeEIsT0FBTyxFQUFFLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTztZQUMxQixJQUFJLEVBQUUsU0FBUyxDQUFDLE1BQU0sQ0FBQztTQUMxQixDQUFDO1FBQ0YsSUFBSSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNqQixJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsVUFBVSxDQUFDLENBQUMsSUFBSSxDQUFDO2dCQUN6QyxFQUFFLENBQUMsWUFBWSxDQUFDO29CQUNaLEtBQUssRUFBRSxDQUFDO2lCQUNYLENBQUMsQ0FBQztZQUNQLENBQUMsQ0FBQyxDQUFDO1NBQ047YUFBTTtZQUNILElBQUksQ0FBQyxJQUFJLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFNBQVMsRUFBRSxVQUFVLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQzlELEVBQUUsQ0FBQyxZQUFZLENBQUM7b0JBQ1osS0FBSyxFQUFFLENBQUM7aUJBQ1gsQ0FBQyxDQUFDO1lBQ1AsQ0FBQyxDQUFDLENBQUM7U0FDTjtJQUVMLENBQUM7Q0FDSixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1N0dWRlbnRBcGl9IGZyb20gJy4uLy4uLy4uLy4uL2FwaXMvc3R1ZGVudC1hcGknO1xuaW1wb3J0IHtTdHVkZW50fSBmcm9tICcuLi8uLi8uLi8uLi91dGlscy90eXBlcy9zdHVkZW50JztcblxuUGFnZSh7XG4gICAgZGF0YToge1xuICAgICAgICBzdHVkZW50QXBpOiA8U3R1ZGVudEFwaT57fSxcbiAgICAgICAgc3R1ZGVudElkOiAwLFxuICAgICAgICBjbGFzc0lkOiAwLFxuICAgICAgICBpc05ldzogdHJ1ZSxcbiAgICAgICAgbmFtZTogJydcbiAgICB9LFxuICAgIG9uTG9hZChxdWVyeTogYW55KSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHF1ZXJ5KTtcbiAgICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgICAgIHN0dWRlbnRBcGk6IG5ldyBTdHVkZW50QXBpKCksXG4gICAgICAgICAgICBzdHVkZW50SWQ6IHF1ZXJ5WydzdHVkZW50SWQnXSB8fCAnJyxcbiAgICAgICAgICAgIGlzTmV3OiAhcXVlcnlbJ3N0dWRlbnRJZCddLFxuICAgICAgICAgICAgY2xhc3NJZDogcXVlcnlbJ2NsYXNzSWQnXVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5nZXRDaGlsZCgpO1xuICAgIH0sXG4gICAgZ2V0Q2hpbGQoKSB7XG4gICAgICAgIGlmICh0aGlzLmRhdGEuc3R1ZGVudElkKSB7XG4gICAgICAgICAgICB0aGlzLmRhdGEuc3R1ZGVudEFwaS5nZXQodGhpcy5kYXRhLnN0dWRlbnRJZCkudGhlbihyZXN1bHQgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IHJlc3VsdC5uYW1lXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgZm9ybVN1Ym1pdChlOiBhbnkpIHtcbiAgICAgICAgY29uc3QgZm9ybVZhbHVlID0gZS5kZXRhaWwudmFsdWU7XG4gICAgICAgIGNvbnN0IG5ld1N0dWRlbnQgPSA8U3R1ZGVudD57XG4gICAgICAgICAgICBjbGFzc0lkOiB0aGlzLmRhdGEuY2xhc3NJZCxcbiAgICAgICAgICAgIG5hbWU6IGZvcm1WYWx1ZVsnbmFtZSddXG4gICAgICAgIH07XG4gICAgICAgIGlmICh0aGlzLmRhdGEuaXNOZXcpIHtcbiAgICAgICAgICAgIHRoaXMuZGF0YS5zdHVkZW50QXBpLmNyZWF0ZShuZXdTdHVkZW50KS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICB3eC5uYXZpZ2F0ZUJhY2soe1xuICAgICAgICAgICAgICAgICAgICBkZWx0YTogMVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0aGlzLmRhdGEuc3R1ZGVudEFwaS51cGRhdGUodGhpcy5kYXRhLnN0dWRlbnRJZCwgbmV3U3R1ZGVudCkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgd3gubmF2aWdhdGVCYWNrKHtcbiAgICAgICAgICAgICAgICAgICAgZGVsdGE6IDFcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICB9XG59KTtcbiJdfQ==