"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var file_upload_1 = require("../file-upload");
var UploadVideoItemObj = (function () {
    function UploadVideoItemObj(upToken, chooseRes, onChange) {
        this.upToken = upToken;
        this.tempPath = chooseRes.tempFilePath;
        var filePathSplit = this.tempPath.split('.');
        var suffix = filePathSplit[filePathSplit.length - 1];
        this.fileName = "item_cover_" + Math.random().toString(36).substr(2) + "_" + new Date().getTime() + "." + suffix;
        this.progress = 0;
        this.success = false;
        this.completed = false;
        this.duration = chooseRes.duration;
        this.height = chooseRes.height;
        this.width = chooseRes.width;
        this.size = chooseRes.size;
        this.onChange = onChange;
    }
    UploadVideoItemObj.prototype.upload = function () {
        var _this = this;
        var uploadTask = file_upload_1.qiniuFileUpload(this.tempPath, this.fileName, this.upToken, function () {
            _this.completed = true;
            _this.success = true;
            _this.onChange(_this);
        }, function () {
            _this.completed = true;
            _this.success = false;
            _this.onChange(_this);
        });
        uploadTask.onProgressUpdate(function (res) {
            _this.progress = res.progress;
            _this.onChange(_this);
        });
    };
    ;
    return UploadVideoItemObj;
}());
exports.UploadVideoItemObj = UploadVideoItemObj;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBsb2FkLXZpZGVvLWl0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJ1cGxvYWQtdmlkZW8taXRlbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLDhDQUErQztBQWlCL0M7SUFhSSw0QkFBWSxPQUFlLEVBQUUsU0FBMkMsRUFBRSxRQUErQztRQUNySCxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQztRQUN2QixJQUFJLENBQUMsUUFBUSxHQUFHLFNBQVMsQ0FBQyxZQUFZLENBQUM7UUFDdkMsSUFBTSxhQUFhLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUM7UUFDL0MsSUFBTSxNQUFNLEdBQUcsYUFBYSxDQUFDLGFBQWEsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUM7UUFDdkQsSUFBSSxDQUFDLFFBQVEsR0FBRyxnQkFBYyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQUMsU0FBSSxJQUFJLElBQUksRUFBRSxDQUFDLE9BQU8sRUFBRSxTQUFJLE1BQVEsQ0FBQztRQUN2RyxJQUFJLENBQUMsUUFBUSxHQUFHLENBQUMsQ0FBQztRQUNsQixJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztRQUNyQixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQztRQUN2QixJQUFJLENBQUMsUUFBUSxHQUFHLFNBQVMsQ0FBQyxRQUFRLENBQUM7UUFDbkMsSUFBSSxDQUFDLE1BQU0sR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDO1FBQy9CLElBQUksQ0FBQyxLQUFLLEdBQUcsU0FBUyxDQUFDLEtBQUssQ0FBQztRQUM3QixJQUFJLENBQUMsSUFBSSxHQUFHLFNBQVMsQ0FBQyxJQUFJLENBQUM7UUFDM0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7SUFDN0IsQ0FBQztJQUVELG1DQUFNLEdBQU47UUFBQSxpQkFjQztRQWJHLElBQU0sVUFBVSxHQUFHLDZCQUFlLENBQUMsSUFBSSxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDM0UsS0FBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUM7WUFDdEIsS0FBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUM7WUFDcEIsS0FBSSxDQUFDLFFBQVEsQ0FBQyxLQUFJLENBQUMsQ0FBQztRQUN4QixDQUFDLEVBQUU7WUFDQyxLQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQztZQUN0QixLQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztZQUNyQixLQUFJLENBQUMsUUFBUSxDQUFDLEtBQUksQ0FBQyxDQUFDO1FBQ3hCLENBQUMsQ0FBQyxDQUFDO1FBQ0gsVUFBVSxDQUFDLGdCQUFnQixDQUFDLFVBQUEsR0FBRztZQUMzQixLQUFJLENBQUMsUUFBUSxHQUFHLEdBQUcsQ0FBQyxRQUFRLENBQUM7WUFDN0IsS0FBSSxDQUFDLFFBQVEsQ0FBQyxLQUFJLENBQUMsQ0FBQztRQUN4QixDQUFDLENBQUMsQ0FBQztJQUNQLENBQUM7SUFBQSxDQUFDO0lBQ04seUJBQUM7QUFBRCxDQUFDLEFBNUNELElBNENDO0FBNUNZLGdEQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7cWluaXVGaWxlVXBsb2FkfSBmcm9tICcuLi9maWxlLXVwbG9hZCc7XG5pbXBvcnQgQ2hvb3NlVmlkZW9TdWNjZXNzQ2FsbGJhY2tSZXN1bHQgPSBXZWNoYXRNaW5pcHJvZ3JhbS5DaG9vc2VWaWRlb1N1Y2Nlc3NDYWxsYmFja1Jlc3VsdDtcblxuZXhwb3J0IGludGVyZmFjZSBVcGxvYWRWaWRlb0l0ZW0ge1xuICAgIHRlbXBQYXRoOiBzdHJpbmc7XG4gICAgZmlsZU5hbWU6IHN0cmluZztcbiAgICBkdXJhdGlvbjogbnVtYmVyO1xuICAgIGhlaWdodDogbnVtYmVyO1xuICAgIHdpZHRoOiBudW1iZXI7XG4gICAgc2l6ZTogbnVtYmVyO1xuICAgIHByb2dyZXNzOiBudW1iZXI7XG4gICAgY29tcGxldGVkOiBib29sZWFuO1xuICAgIHN1Y2Nlc3M6IGJvb2xlYW47XG5cbiAgICB1cGxvYWQ6ICgpID0+IHZvaWQ7XG59XG5cbmV4cG9ydCBjbGFzcyBVcGxvYWRWaWRlb0l0ZW1PYmogaW1wbGVtZW50cyBVcGxvYWRWaWRlb0l0ZW0ge1xuICAgIHB1YmxpYyBjb21wbGV0ZWQ6IGJvb2xlYW47XG4gICAgcHVibGljIGZpbGVOYW1lOiBzdHJpbmc7XG4gICAgcHVibGljIHByb2dyZXNzOiBudW1iZXI7XG4gICAgcHVibGljIHN1Y2Nlc3M6IGJvb2xlYW47XG4gICAgcHVibGljIHRlbXBQYXRoOiBzdHJpbmc7XG4gICAgcHVibGljIGR1cmF0aW9uOiBudW1iZXI7XG4gICAgcHVibGljIGhlaWdodDogbnVtYmVyO1xuICAgIHB1YmxpYyB3aWR0aDogbnVtYmVyO1xuICAgIHB1YmxpYyBzaXplOiBudW1iZXI7XG4gICAgcHJpdmF0ZSByZWFkb25seSB1cFRva2VuOiBzdHJpbmc7XG4gICAgcHJpdmF0ZSByZWFkb25seSBvbkNoYW5nZTogKHJlc3VsdD86IFVwbG9hZFZpZGVvSXRlbU9iaikgPT4gdm9pZDtcblxuICAgIGNvbnN0cnVjdG9yKHVwVG9rZW46IHN0cmluZywgY2hvb3NlUmVzOiBDaG9vc2VWaWRlb1N1Y2Nlc3NDYWxsYmFja1Jlc3VsdCwgb25DaGFuZ2U6IChyZXN1bHQ/OiBVcGxvYWRWaWRlb0l0ZW1PYmopID0+IHZvaWQpIHtcbiAgICAgICAgdGhpcy51cFRva2VuID0gdXBUb2tlbjtcbiAgICAgICAgdGhpcy50ZW1wUGF0aCA9IGNob29zZVJlcy50ZW1wRmlsZVBhdGg7XG4gICAgICAgIGNvbnN0IGZpbGVQYXRoU3BsaXQgPSB0aGlzLnRlbXBQYXRoLnNwbGl0KCcuJyk7XG4gICAgICAgIGNvbnN0IHN1ZmZpeCA9IGZpbGVQYXRoU3BsaXRbZmlsZVBhdGhTcGxpdC5sZW5ndGggLSAxXTtcbiAgICAgICAgdGhpcy5maWxlTmFtZSA9IGBpdGVtX2NvdmVyXyR7TWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyKDIpfV8ke25ldyBEYXRlKCkuZ2V0VGltZSgpfS4ke3N1ZmZpeH1gO1xuICAgICAgICB0aGlzLnByb2dyZXNzID0gMDtcbiAgICAgICAgdGhpcy5zdWNjZXNzID0gZmFsc2U7XG4gICAgICAgIHRoaXMuY29tcGxldGVkID0gZmFsc2U7XG4gICAgICAgIHRoaXMuZHVyYXRpb24gPSBjaG9vc2VSZXMuZHVyYXRpb247XG4gICAgICAgIHRoaXMuaGVpZ2h0ID0gY2hvb3NlUmVzLmhlaWdodDtcbiAgICAgICAgdGhpcy53aWR0aCA9IGNob29zZVJlcy53aWR0aDtcbiAgICAgICAgdGhpcy5zaXplID0gY2hvb3NlUmVzLnNpemU7XG4gICAgICAgIHRoaXMub25DaGFuZ2UgPSBvbkNoYW5nZTtcbiAgICB9XG5cbiAgICB1cGxvYWQoKSB7XG4gICAgICAgIGNvbnN0IHVwbG9hZFRhc2sgPSBxaW5pdUZpbGVVcGxvYWQodGhpcy50ZW1wUGF0aCwgdGhpcy5maWxlTmFtZSwgdGhpcy51cFRva2VuLCAoKSA9PiB7XG4gICAgICAgICAgICB0aGlzLmNvbXBsZXRlZCA9IHRydWU7XG4gICAgICAgICAgICB0aGlzLnN1Y2Nlc3MgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5vbkNoYW5nZSh0aGlzKTtcbiAgICAgICAgfSwgKCkgPT4ge1xuICAgICAgICAgICAgdGhpcy5jb21wbGV0ZWQgPSB0cnVlO1xuICAgICAgICAgICAgdGhpcy5zdWNjZXNzID0gZmFsc2U7XG4gICAgICAgICAgICB0aGlzLm9uQ2hhbmdlKHRoaXMpO1xuICAgICAgICB9KTtcbiAgICAgICAgdXBsb2FkVGFzay5vblByb2dyZXNzVXBkYXRlKHJlcyA9PiB7XG4gICAgICAgICAgICB0aGlzLnByb2dyZXNzID0gcmVzLnByb2dyZXNzO1xuICAgICAgICAgICAgdGhpcy5vbkNoYW5nZSh0aGlzKTtcbiAgICAgICAgfSk7XG4gICAgfTtcbn0iXX0=